{
    "$schema": "http://json-schema.org/draft-04/schema",
    "id": "https://platform.ipmdecisions.net/api/dss/rest/schema/dss",
    "type": "object",
    "title": "The IPM Decisions DSS metadata schema",
    "description": "The IPM Decisions describes the structure of the DSS information used in the IPM Decisions platform. A DSS consists of one or more pest prediction models (for instance: VIPS is a DSS that has models for Potato late blight, Apple scab, Carrot rust fly etc.), in addition to contact information about the DSS provider.",
    "required": [
        "models",
        "id",
        "version",
        "name",
        "url",
        "languages",
        "organization"
    ],
    "properties": {
        "id": {
            "id": "#/properties/id",
            "type": "string",
            "title": "The DSS ID",
            "description": "A unique ID for this DSS, e.g. \"no.nibio.vips\". No spaces allowed",
            "pattern": "^[^\\s]*$",
            "default": "",
            "examples": [
                "no.nibio.vips"
            ]
        },
        "version": {
            "id": "#/properties/version",
            "type": "string",
            "title": "The DSS version",
            "description": "The version number of the DSS. Change this when a DSS (or this metadata describing it) changes significantly, so that the platform can distinguish between different configurations. No spaces allowed.",
            "default": "",
            "pattern": "^[^\\s]*$",
            "examples": [
                "2.0"
            ]
        },
        "name": {
            "id": "#/properties/name",
            "type": "string",
            "title": "The DSS name [1]",
            "description": "The name of the DSS, e.g. \"VIPS\", \"ADAS DSS\"",
            "default": "",
            "examples": [
                "VIPS"
            ]
        },
        "url": {
            "id": "#/properties/url",
            "type": "string",
            "format": "url",
            "title": "The DSS web address (URL)",
            "description": "A URL to the DSS (outside of the IPM Decisions platform), e.g. \"https://www.vips-landbruk.no/\"",
            "default": "",
            "examples": [
                "https://www.vips-landbruk.no/"
            ]
        },
        "logo_url": {
            "id": "#/properties/logo_url",
            "type": "string",
            "format": "url",
            "title": "URL to the DSS provider's logo",
            "description": "A URL to the DSS provider's logo. It might be e.g. at the DSS provider's web site or it might be located in the DSS API. In the latter case, it will only have a relative path, e.g.  '/dss/logo/VIPSLogo.png'",
            "default": "",
            "examples": [
                "/dss/logo/VIPSLogo.png",
                "https://www.vips-landbruk.no/static/images/logo_vips_newest.png"
            ]
        },
        "languages": {
            "id": "#/properties/languages",
            "type": "array",
            "title": "Supported languages",
            "description": "A list of languages that the DSS supports (translations). E.g. \"Norwegian\", \"English\"",
            "default": [],
            "examples": [
                [
                    "Norwegian",
                    "English"
                ]
            ],
            "additionalItems": true,
            "items": {
                "id": "#/properties/languages/items",
                "type": "string"
            }
        },
        "organization": {
            "id": "#/properties/organization",
            "type": "object",
            "title": "DSS provider (organization) information",
            "description": "Information about the (main) organization behind the DSS",
            "default": {},
            "examples": [
                {
                    "name": "NIBIO",
                    "country": "Norway",
                    "address": "Postboks 115",
                    "postal_code": "1431",
                    "city": "Ås",
                    "email": "berit.nordskog@nibio.no",
                    "url": "https://www.nibio.no/"
                }
            ],
            "required": [
                "name",
                "country",
                "address",
                "postal_code",
                "city",
                "email",
                "url"
            ],
            "properties": {
                "name": {
                    "id": "#/properties/organization/properties/name",
                    "type": "string",
                    "title": "Organization name [2]",
                    "description": "The name of the organization, e.g. \"NIBIO\" or \"ADAS\"",
                    "default": "",
                    "examples": [
                        "NIBIO"
                    ]
                },
                "country": {
                    "id": "#/properties/organization/properties/country",
                    "type": "string",
                    "title": "Organization country [3]",
                    "description": "The country of the organization's main headquarters",
                    "default": "",
                    "examples": [
                        "Norway"
                    ]
                },
                "address": {
                    "id": "#/properties/organization/properties/address",
                    "type": "string",
                    "title": "Organization street address",
                    "description": "The address of the organization's main headquarters",
                    "default": "",
                    "examples": [
                        "Høgskoleveien 7"
                    ]
                },
                "postal_code": {
                    "id": "#/properties/organization/properties/postal_code",
                    "type": "string",
                    "title": "Organization postal code",
                    "description": "The postal code of the organization's main headquarters",
                    "default": "",
                    "examples": [
                        "1431"
                    ]
                },
                "city": {
                    "id": "#/properties/organization/properties/city",
                    "type": "string",
                    "title": "Organization city",
                    "description": "The city of the organization's main headquarters",
                    "default": "",
                    "examples": [
                        "Ås"
                    ]
                },
                "email": {
                    "id": "#/properties/organization/properties/email",
                    "type": "string",
                    "format": "email",
                    "title": "Organization email",
                    "description": "A contact email for the organization",
                    "default": "",
                    "examples": [
                        "berit.nordskog@nibio.no"
                    ]
                },
                "url": {
                    "id": "#/properties/organization/properties/url",
                    "type": "string",
                    "format": "url",
                    "title": "Organization web address (URL)",
                    "description": "A URL to the organization, e.g. \"https://www.nibio.no/\"",
                    "default": "",
                    "examples": [
                        "https://www.nibio.no/"
                    ]
                }
            },
            "additionalProperties": false
        },
        "models": {
            "title": "The list of DSS pest prediction models",
            "description": "For each DSS pest prediction model (there has to be at least one), create an item in this list. E.g. VIPS is a DSS that has models for Potato late blight, Apple scab, Carrot rust fly etc. ",
            "type": "array",
            "additionalItems": false,
            "required": ["id","name","version"],
            "items": {
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Model name [4]",
                        "description": "The name of the model, e.g. \"Carrot rust fly temperature model\"",
                        "type": "string",
                        "examples": [
                            "Carrot rust fly temperature model"
                        ]
                    },
                    "id": {
                        "type": "string",
                        "title": "Model ID [5]",
                        "description": "A unique ID for the model in the namespace of the DSS. E.g. \"PSILARTEMP\". No spaces allowed.",
                        "default": "",
                        "pattern": "^[^\\s]*$",
                        "examples": [
                            "PSILARTEMP"
                        ]
                    },
                    "version": {
                        "id": "#/properties/models/items/anyOf/0/properties/version",
                        "type": "string",
                        "title": "Model version",
                        "description": "Use this for uniquely versioning the model (over time). If the input schema has changed, the version number must be updated, so that the platform can keep track of the changes. No spaces allowed",
                        "default": "",
                        "pattern": "^[^\\s]*$",
                        "examples": [
                            "1.0"
                        ]
                    },
                    "type_of_decision": {
                        "id": "#/properties/models/items/anyOf/0/properties/type_of_decision",
                        "type": "string",
                        "title": "Type of decision",
                        "description": "Describing what kind of decision the model gives advice on. E.g. \"Short-term tactical\"",
                        "default": "",
                        "examples": [
                            "Short-term tactical"
                        ]
                    },
                    "type_of_output": {
                        "id": "#/properties/models/items/anyOf/0/properties/type_of_output",
                        "type": "string",
                        "title": "The type of output",
                        "description": "What kind of output does the model give. E.g. \"Risk indication\"",
                        "default": "",
                        "examples": [
                            "Risk indication"
                        ]
                    },
                    "description_URL": {
                        "id": "#/properties/models/items/anyOf/0/properties/description_URL",
                        "type": "string",
                        "format": "url",
                        "title": "Description URL",
                        "description": "A URL (web address) to more description of the model, e.g. on the DSS provider's web site",
                        "default": "",
                        "examples": [
                            "https://www.vips-landbruk.no/forecasts/models/PSILARTEMP/"
                        ]
                    },
                    "purpose": {
                        "id": "#/properties/models/items/anyOf/0/properties/purpose",
                        "type": "string",
                        "title": "Purpose of the model [6]",
                        "description": "A short description of the model",
                        "default": "",
                        "examples": [
                            "Estimates risk of flight and egg laying in pome fruit"
                        ]
                    },
                    "description": {
                        "id": "#/properties/models/items/anyOf/0/properties/description",
                        "type": "string",
                        "title": "Description [7]",
                        "description": "A concise description of the model. For example: \n THE PEST: Leaf blotch diseases of wheat can be caused by septoria tritici blotch (Zymoseptoria tritici) and staganospora nodorum blotch (Parastagonospora nodorum), which are both  favoured by wet conditions. \nTHE DECISION: Fungicide treatments may need to be applied between stem extension and ear emergence, mainly to protect the upper leaves.  \nTHE MODEL: The humidity model estimates risk of septoria tritici blotch infections in winter wheat. Risk of attack is assumed after 20 hours with continuous wetness. A wet hour is defined as minimum 0,2 mm precipitation in an hour or minimum 85% relative humidity. \nTHE PARAMETERS: Weather data from GS 31 are used. In addition, the dates of occurrence of growth stages 31 and 32 are entered. The model calculates the expected date for the other stages. This can be adjusted manually. Adding information on fungicide spraying dates is vital for the model. After spraying, the model assumes that the crop is protected for 10 days. The thresholds for number of wet hours and relative humidity can be adjusted manually.  \nSOURCE: Created by Aahus University and SEGES and released in Denmark in 2017. Tested in Lithuania, Norway, Sweden, Finland and Denmark in 2018 and 2019. \nASSUMPTIONS: septoria tritici blotch is present and periods with high humidity create risk for a damaging epidemic",
                        "default": "",
                        "format": "textarea",
                        "examples": [
                            "THE PEST: Leaf blotch diseases of wheat can be caused by septoria tritici blotch (Zymoseptoria tritici) and staganospora nodorum blotch (Parastagonospora nodorum), which are both  favoured by wet conditions. \nTHE DECISION: Fungicide treatments may need to be applied between stem extension and ear emergence, mainly to protect the upper leaves.  \nTHE MODEL: The humidity model estimates risk of septoria tritici blotch infections in winter wheat. Risk of attack is assumed after 20 hours with continuous wetness. A wet hour is defined as minimum 0,2 mm precipitation in an hour or minimum 85% relative humidity. \nTHE PARAMETERS: Weather data from GS 31 are used. In addition, the dates of occurrence of growth stages 31 and 32 are entered. The model calculates the expected date for the other stages. This can be adjusted manually. Adding information on fungicide spraying dates is vital for the model. After spraying, the model assumes that the crop is protected for 10 days. The thresholds for number of wet hours and relative humidity can be adjusted manually.  \nSOURCE: Created by Aahus University and SEGES and released in Denmark in 2017. Tested in Lithuania, Norway, Sweden, Finland and Denmark in 2018 and 2019. \nASSUMPTIONS: septoria tritici blotch is present and periods with high humidity create risk for a damaging epidemic"
                        ]
                    },
                    "citation": {
                        "id": "#/properties/models/items/anyOf/0/properties/citation",
                        "type": ["string","null"],
                        "title": "Citations",
                        "description": "Any literature references for the model. If you have no citations, click \"string\" and change the type to null. The text field will disappear.",
                        "default": "",
                        "examples": [
                            null
                        ]
                    },
                    "keywords": {
                        "id": "#/properties/models/items/anyOf/0/properties/keywords",
                        "type": ["string","null"],
                        "title": "Keywords",
                        "description": "Keywords to make this model searchable. E.g. \"foo, bar, mechanistic, regression\". If you have no keywords, click \"string\" and change the type to null. The text field will disappear.",
                        "default": "",
                        "examples": [
                            "foo, bar, mechanistic, regression"
                        ]
                    },
                    "platform_validated":
                    {
                        "type": "boolean",
                        "title": "Validated for use in the platform",
                        "description":"If not true, the model is not ready to be used on the platform. This is to be decided by IPM Decisions.",
                        "default": false
                    },
                    "pests": {
                        "id": "#/properties/models/items/anyOf/0/properties/pests",
                        "type": "array",
                        "title": "List of relevant pests (EPPO codes) [8]",
                        "description": "A list of EPPO codes (https://gd.eppo.int/) for the pests predicted by this model. E.g. [\"PSILRO\"]. No spaces allowed",
                        "default": [],
                        "examples": [
                            [
                                "PSILRO"
                            ]
                        ],
                        "additionalItems": false,
                        "items": {
                            "id": "#/properties/models/items/anyOf/0/properties/pests/items",
                            "type" : "string",
                            "pattern": "^[^\\s]*$"
                        }
                    },
                    "crops": {
                        "id": "#/properties/models/items/anyOf/0/properties/crops",
                        "type": "array",
                        "title": "List of relevant crops (EPPO codes) [9]",
                        "description": "A list of EPPO codes (https://gd.eppo.int/) for the crops in which this model predicts pests. E.g. [\"DAUCS\"]. No spaces allowed",
                        "default": [],
                        "examples": [
                            [
                                "DAUCS"
                            ]
                        ],
                        "additionalItems": false,
                        "items": {
                            "id": "#/properties/models/items/anyOf/0/properties/crops/items",
                            "type" : "string",
                            "pattern": "^[^\\s]*$"
                        }
                    },
                    "authors": {
                        "id": "#/properties/models/items/anyOf/0/properties/authors",
                        "type": "array",
                        "title": "Author(s) of the model",
                        "description": "List of model author(s)",
                        "default": [],
                        "examples": [
                            [
                                {
                                    "name": "Berit Nordskog",
                                    "email": "berit.nordskog@nibio.no",
                                    "organization": "NIBIO"
                                }
                            ]
                        ],
                        "additionalItems": false,
                        "items": {
                            "id": "#/properties/models/items/anyOf/0/properties/authors/items",
                            "type": "object",
                            "required": [
                                "name"
                            ],
                            "properties": {
                                "name": {
                                    "title": "Author name [10]",
                                    "id": "#/properties/models/items/anyOf/0/properties/authors/items/anyOf/0/properties/name",
                                    "type": "string"
                                },
                                "email": {
                                    "title": "Author email address",
                                    "id": "#/properties/models/items/anyOf/0/properties/authors/items/anyOf/0/properties/email",
                                    "type": ["string","null"]
                                },
                                "organization": {
                                    "title": "Author organization [11]",
                                    "id": "#/properties/models/items/anyOf/0/properties/authors/items/anyOf/0/properties/organization",
                                    "type": ["string","null"]
                                }
                            },
                            "additionalProperties": false
                        }
                    },
                    "execution": {
                        "id": "#/properties/models/items/anyOf/0/properties/execution",
                        "type": "object",
                        "title": "Model execution meta data",
                        "description": "Meta data about how to execute the model",
                        "default": {},
                        "examples": [
                            {
                                "type": "ONTHEFLY",
                                "endpoint": "https://coremanager.vips.nibio.no/models/PSILARTEMP/run/ipmd",
                                "form_method": "post",
                                "content_type": "application/json",
                                "input_schema_hidden_properties": ["modelId"],
                                "input_schema_categories": {
                                    "hidden": ["modelId"],
                                    "system": [],
                                    "user_init": ["configParameters.dateGs31","configParameters.date3rdUpperLeafEmerging"],
                                    "triggered": [],
                                    "internal": ["configParameters.thresholdRelativeHumidity","configParameters.thresholdLeafWetness"]
                                },
                                "input_schema": "{\n  \"type\":\"object\",\n  \"properties\": {\n    \"modelId\": {\"type\": \"string\", \"pattern\":\"^PSILARTEMP$\", \"title\": \"Model Id\", \"default\":\"PSILARTEMP\", \"description\":\"Must be PSILARTEMP\"},\n    \"configParameters\": {\n      \"title\":\"Configuration parameters\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"timeZone\": {\"type\": \"string\", \"title\": \"Time zone (e.g. Europe/Oslo)\", \"default\":\"Europe/Oslo\"},\n        \"timeStart\": {\"type\":\"string\",\"format\": \"date\", \"title\": \"Start date of calculation (YYYY-MM-DD)\"},\n        \"timeEnd\": {\"type\":\"string\",\"format\": \"date\", \"title\": \"End date of calculation (YYYY-MM-DD)\"}\n      },\n      \"required\": [\"timeZone\",\"timeStart\",\"timeEnd\"]\n    },\n    \"weatherData\": {\n      \"$ref\": \"https://platform.ipmdecisions.net/api/wx/rest/schema/weatherdata\"\n    }\n  },\n  \"required\": [\"modelId\",\"configParameters\"]\n}\n"
                            }
                        ],
                        "required": [
                            "type",
                            "endpoint",
                            "form_method",
                            "content_type",
                            "input_schema"
                        ],
                        "properties": {
                            "type": {
                                "id": "#/properties/models/items/anyOf/0/properties/execution/properties/type",
                                "type": "string",
                                "title": "Type of execution",
                                "description": "E.g. \"ONTHEFLY\" (Executable on the fly from a web service endpoint) or \"LINK\" (The user just gets a link to the DSS)"
                            },
                            "endpoint": {
                                "id": "#/properties/models/items/anyOf/0/properties/execution/properties/endpoint",
                                "type": "string",
                                "format": "url",
                                "title": "Web service endpoint",
                                "description": "Assuming that the model can be run on the fly (Type of execution='ONTHEFLY'), please state the URL to the web service endpoint, i.e. the URL that the platform uses to run the model, passing input data and receiving result data."
                            },
                            "form_method": {
                                "id": "#/properties/models/items/anyOf/0/properties/execution/properties/form_method",
                                "type": "string",
                                "title": "Web service HTTP method",
                                "description": "One of the HTTP methods (GET, POST, UPDATE). Read more here: https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods"
                            },
                            "content_type": {
                                "id": "#/properties/models/items/anyOf/0/properties/execution/properties/content_type",
                                "type": "string",
                                "title": "Content type",
                                "description": "The Content type, specified as a MIME type (https://www.iana.org/assignments/media-types/media-types.xhtml), of the data sent to the DSS web service endpoint. E.g. \"application/json\" tells that data should be sent as Json (https://en.wikipedia.org/wiki/JSON) and not e.g. XML (https://en.wikipedia.org/wiki/XML)"
                            },
                            "input_schema_categories": {
                                "type": "object",
                                "title": "Categories of the input schema properties",
                                "description": "Use these categories to hint to the platform how the DSS input parameter fields should be displayed in a form. Use their full path, e.g. \"configParameters.thresholdPrecipitation\"",
                                "properties": {
                                    "hidden": {
                                        "type": "array",
                                        "items": {"type":"string"},
                                        "title": "List of hidden parameters",
                                        "description": "These properties will not be visible to the user in the DSS input parameter form, their values will be provided by defaults"
                                    },
                                    "internal": {
                                        "type": "array",
                                        "items": {"type":"string"},
                                        "title": "List of internal parameters",
                                        "description": "Can be set by the researcher/advisor as part of the adaptation dashboard (one of the advanced dashboards in the platform), for changing the model's characteristics, e.g. for adaptation to a new region/country"
                                    },
                                    "triggered": {
                                        "type": "array",
                                        "items": {"type":"string"},
                                        "title": "List of DSS triggered parameters",
                                        "description": "Input to these properties may be triggered by the model. This can be e.g. field observations that the model requires to proceed with its calculations/recommendations, and that it doesn't get automatically by the system."
                                    },
                                    "user_init": {
                                        "type": "array",
                                        "items": {"type":"string"},
                                        "title": "User initiated parameters",
                                        "description": "This is the default. These are values that the user is able to set as part of the initial set-up. E.g. sowing date."
                                    },
                                    "system": {
                                        "type": "array",
                                        "items": {"type":"string"},
                                        "title": "System parameters",
                                        "description": "Parameters that should be set by the IPM Decisions Platform. E.g. start date and end date for running the model. "
                                    }
                                }

                            },
                            "input_schema": {
                                "id": "#/properties/models/items/anyOf/0/properties/execution/properties/input_schema",
                                "type": "string",
                                "format": "json",
                                "title": "Input schema",
                                "description": "This is the schema (http://json-schema.org/) that expresses the DSS's need for input data: Which parameters, what types (string, number, array etc) are they. Used by the platform to create a form for the user to set up the DSS for their field(s)"

                            }
                        },
                        "additionalProperties": false
                    },
                    "input": {
                        "id": "#/properties/models/items/anyOf/0/properties/input",
                        "type": "object",
                        "title": "Description of input",
                        "description": "Description of important input parameters such as weather data and field observations. To configure field observations, change the type of \"Field observation\" from \"null\" to \"object\"",
                        "default": {},
                        "examples": [
                            {
                                "weather": [
                                    {
                                        "parameter_code": 1002,
                                        "interval": 86400
                                    }
                                ],
                                "field_observation": {"species":["PSILRO"]}
                            }
                        ],
                        "properties": {
                            "weather_parameters": {
                                "id": "#/properties/models/items/anyOf/0/properties/input/properties/weather_parameters",
                                "type": ["array","null"],
                                "title": "Weather parameters",
                                "description": "A list of weather parameters and their intervals (given in seconds) that are required. A complete list can be found here: https://ipmdecisions.nibio.no/api/wx/rest/parameter",
                                "default": [],
                                "examples": [
                                    [
                                        {
                                            "parameter_code": 1002,
                                            "interval": 86400
                                        }
                                    ]
                                ],
                                "additionalItems": false,
                                "items": {
                                    "id": "#/properties/models/items/anyOf/0/properties/input/properties/weather_parameters/items",
                                    "type": "object",
                                    "properties": {
                                        "parameter_code": {
                                            "id": "#/properties/models/items/anyOf/0/properties/input/properties/weather_parameters/items/anyOf/0/properties/parameter_code",
                                            "type": "integer",
                                            "title": "Parameter code",
                                            "description": "See https://ipmdecisions.nibio.no/api/wx/rest/parameter for a complete list."
                                        },
                                        "interval": {
                                            "id": "#/properties/models/items/anyOf/0/properties/input/properties/weather_parameters/items/anyOf/0/properties/interval",
                                            "type": "integer",
                                            "title": "Interval (seconds)",
                                            "description": "3600 = Hourly weather data. 86400 = Daily weather data"
                                        }
                                    },
                                    "additionalProperties": true
                                }
                            },
                            "weather_data_period_start": {
                                "type": ["array","null"],
                                "title": "The start date of collecting weather data",
                                "description" : "Array of definitions with the highest priority first",
                                "default": [{"determined_by":"FIXED_DATE","value":"{CURRENT_YEAR}-01-01"}],
                                "examples": [
                                    [
                                        {"determined_by":"INPUT_SCHEMA_PROPERTY","value":"configParameters.timeStart"},
                                        {"determined_by":"FIXED_DATE","value":"{CURRENT_YEAR}-01-01"}
                                    ]
                                ],
                                "items": {
                                    "type": "object",
                                    "required": ["determined_by","value"],
                                    "properties": {
                                        "determined_by": {
                                            "type":"string",
                                            "title": "Weather data period start is determined by",
                                            "description": "Could be either FIXED DATE or INPUT_SCHEMA_PROPERTY. In the former case, the date should be of format {CURRENT_YEAR}-MM-DD (e.g. \"{CURRENT_YEAR}-01-01\"). In the latter case, it should be the path to a date property in the input_schema.",
                                            "pattern": "^FIXED_DATE$|^INPUT_SCHEMA_PROPERTY$"
                                        },
                                        "value":{"type":"string"}
                                    }
                                }
                            },
                            "weather_data_period_end": {
                                "type": ["array","null"],
                                "title": "The end date of collecting weather data",
                                "description" : "Array of definitions with the highest priority first",
                                "default": {"determined_by":"FIXED_DATE","value":"{CURRENT_YEAR}-12-31"},
                                "examples": [
                                    [
                                        {"determined_by":"INPUT_SCHEMA_PROPERTY","value":"configParameters.timeEnd"},
                                        {"determined_by":"FIXED_DATE","value":"{CURRENT_YEAR}-12-31"}
                                    ]
                                ],
                                "items": {
                                    "type": "object",
                                    "required": ["determined_by","value"],
                                    "properties": {
                                        "determined_by": {
                                            "type":"string",
                                            "title": "Weather data period end is determined by",
                                            "description": "Could be either FIXED DATE or INPUT_SCHEMA_PROPERTY. In the former case, the date should be of format {CURRENT_YEAR}-MM-DD (e.g. \"{CURRENT_YEAR}-01-01\"). In the latter case, it should be the path to a date property in the input_schema.",
                                            "pattern": "^FIXED_DATE$|^INPUT_SCHEMA_PROPERTY$"
                                        },
                                        "value":{"type":"string"}
                                    }
                                }
                            },

                            "field_observation": {
                                "id": "#/properties/models/items/anyOf/0/properties/input/properties/field_observation",
                                "type": ["object","null"],
                                "title": "Field observation",
                                "description": "What species field observations are required as input to the model",
                                "properties": {
                                    "species": {
                                        "type":"array",
                                        "title": "List of species observations that can be registered",
                                        "items": {
                                            "title": "Species (EPPO Code)",
                                            "description": "See https://gd.eppo.int/",
                                            "type": "string"
                                        }
                                    }

                                }
                            }
                        },
                        "additionalProperties": true
                    },
                    "valid_spatial": {
                        "id": "#/properties/models/items/anyOf/0/properties/valid_spatial",
                        "type": "object",
                        "title": "Spatial (geographic) validity",
                        "description": "Where is this model confirmed to work? Describe either by a list of countries or by (a) polygon(s) in GeoJson format",
                        "default": {},
                        "examples": [
                            {
                                "countries": [
                                    "NOR"
                                ],
                                "geoJSON": "{}"
                            }
                        ],
                        "properties": {
                            "countries": {
                                "id": "#/properties/models/items/anyOf/0/properties/valid_spatial/properties/countries",
                                "type": "array",
                                "title": "List of countries (country codes) [12]",
                                "description": "ISO-3166-1 Three-letter country codes https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes",
                                "additionalItems": false,
                                "items": {
                                    "id": "#/properties/models/items/anyOf/0/properties/valid_spatial/properties/countries/items",
                                    "type": "string"
                                }
                            },
                            "geoJSON": {
                                "id": "#/properties/models/items/anyOf/0/properties/valid_spatial/properties/geoJSON",
                                "title": "GeoJSON description of valid areas",
                                "format": "json",
                                "description": "If you prefer specifying areas using GIS polygons, then use GeoJSON to describe it: https://geojson.org/. Draw polygons here: http://geojson.io",
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    },
                    "output": {
                        "id": "#/properties/models/items/anyOf/0/properties/output",
                        "type": "object",
                        "title": "Description of DSS model output",
                        "description": "How to interpret and display the output from the model",
                        "default": {},
                        "examples": [
                            {
                                "warning_status_interpretation":
                                [
                                    {
                                        "explanation": "The flight period of the 1st generation is over",
                                        "recommended_action": "Consult your advisory service"
                                    },
                                    {
                                        "explanation": "",
                                        "recommended_action": ""
                                    },
                                    {
                                        "explanation": "The flight period has not yet begun",
                                        "recommended_action": "Consult your advisory service"
                                    },
                                    {
                                        "explanation": "The flight period is beginning, flies can be coming into the field",
                                        "recommended_action": "Consult your advisory service"
                                    },
                                    {
                                        "explanation":"Peak flight period",
                                        "recommended_action":"Consult your advisory service"
                                    }
                                ],
                                "chart_heading": "Day degrees",
                                "result_parameters": [
                                    {
                                        "id": "TMDD5C",
                                        "title": "Accumulated day degrees",
                                        "description": "The accumulated day degrees with a base temperature of 5 degrees celcius",
                                        "chart_info": {
                                            "default_visible": true,
                                            "unit": "&deg;C",
                                            "chart_type": "spline",
                                            "color": "#0066ff"
                                        }
                                    }
                                ],
                                "chart_groups": [
                                    {"id": "G1","title":"Day degrees","result_parameter_ids": ["TMDD5C","FOOBAR"]},
                                    {"id": "G2","title":"Thresholds","result_parameter_ids": ["THRESHOLD_1","THRESHOLD_2","THRESHOLD_3"]}
                                ]
                            }
                        ],
                        "required": [
                            "warning_status_interpretation"
                        ],
                        "properties": {
                            "warning_status_interpretation": {
                                "id": "#/properties/models/items/anyOf/0/properties/output/properties/warning_status_interpretation",
                                "type": "array",
                                "title": "Warning status interpretation [13]",
                                "description": "A list of texts helping the user to interpret the different warning statuses (green, yellow, red) in the given context. Ordering is important. Please provide text as follows: Item 1: WARNING NOT APPLICABLE; Item 2:  MISSING DATA; Item 3: GREEN STATUS; Item 4: YELLOW STATUS; Item 5: RED STATUS. If supporting text is not relevant for a given status for this model, put ‘NA’ against this item.",
                                "additionalItems": false,
                                "minItems": 5,
                                "maxItems": 5,
                                "items": {
                                    "properties": {
                                        "explanation": {"type":"string", "title": "Explanation"},
                                        "recommended_action": {"type":"string", "title": "Recommended action"}
                                    }
                                }
                            },
                            "chart_heading": {
                                "title": "Chart heading",
                                "type": ["string","null"],
                                "default": "",
                                "description": "Heading that encompasses all charts for this DSS model."
                            },
                            "chart_groups": {
                                "type": "array",
                                "title": "Chart groups",
                                "description": "For each chart that you want to display, group the parameters in this section.",
                                "additionalItems": false,
                                "items": {
                                    "properties": {
                                        "id": {"type":"string", "pattern": "^[^\\s]*$", "title": "Chart group ID", "description": "The chart's ID - used to reference it e.g. when translating. Example: \"G1\". Must not contain spaces."},
                                        "title": {"type":"string", "title": "Chart group title", "description": "The chart title as displayed to the user"},
                                        "result_parameter_ids": {"type":"array","title": "Result parameter IDs","description": "Use the result parameter IDs specified in the List of result parameters elsewhere (probably below) in the schema","items":{"type":"string"}}
                                    }
                                }
                            },
                            "result_parameters": {
                                "id": "#/properties/models/items/anyOf/0/properties/output/properties/result_parameters",
                                "type": "array",
                                "title": "List of result parameters",
                                "description": "The model outputs are a timeseries with DSS model specific key-value pairs. You can think of it as a series of chronologically ordered rows with named columns. The key would be the equivalent of the column name (e.g. in Excel [A,B,(...)]), except that you can name it a bit more meaningfully - and you can add a title, a description and chart rendering information as well. Specify here, please.",
                                "additionalItems": false,
                                "items": {
                                    "id": "#/properties/models/items/anyOf/0/properties/output/properties/result_parameters/items",
                                    "required": [
                                        "id",
                                        "title",
                                        "description"
                                    ],
                                    "properties": {
                                        "id": {
                                            "id": "#/properties/models/items/anyOf/0/properties/output/properties/result_parameters/items/anyOf/0/properties/id",
                                            "type": "string",
                                            "title": "Result parameter ID",
                                            "description": "E.g. \"TMDD5C\""
                                        },
                                        "title": {
                                            "id": "#/properties/models/items/anyOf/0/properties/output/properties/result_parameters/items/anyOf/0/properties/title",
                                            "type": "string",
                                            "title": "Result parameter name",
                                            "description": "E.g. \"Accumulated day degrees\""
                                        },
                                        "description": {
                                            "id": "#/properties/models/items/anyOf/0/properties/output/properties/result_parameters/items/anyOf/0/properties/description",
                                            "type": "string",
                                            "title": "Result parameter description",
                                            "description": "E.g. \"The accumulated day degrees with a base temperature of 5 degrees celcius\""
                                        },
                                        "chart_info": {
                                            "id": "#/properties/models/items/anyOf/0/properties/output/properties/result_parameters/items/anyOf/0/properties/chart_info",
                                            "title": "Information for chart rendering",
                                            "properties": {
                                                "default_visible": {"type": "boolean", "title": "Default visible?"},
                                                "unit": {"type": "string", "title": "Measuring unit", "description": "E.g. &deg;C"},
                                                "chart_type": {"type": "string", "title": "Chart type","default": "line", "description": "See https://www.chartjs.org/docs/latest/charts/ for examples of chart types", "enum": ["bar","bubble","doughnut","pie","line","polarArea","radar","scatter"]},
                                                "color": {"type": "string", "format": "color", "title": "Color (hex code)", "description": "E.g. \"#ffff00\" Use a color picker online: https://www.w3schools.com/colors/colors_picker.asp"}
                                            },
                                            "required": ["default_visible","unit","chart_type","color"]
                                        }
                                    },
                                    "additionalProperties": true
                                }
                            }
                        },
                        "additionalProperties": true
                    }
                },
                "additionalProperties": true


            }
        }
    },
    "additionalProperties": false
}